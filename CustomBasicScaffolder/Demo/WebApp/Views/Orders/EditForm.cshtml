@model WebApp.Models.Order

@Html.HiddenFor(model => model.Id)
<div class="form-group">
    @Html.LabelFor(model => model.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Customer, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Customer, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ShippingAddress, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.ShippingAddress, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ShippingAddress, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.OrderDate, "Date")
        @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
    </div>
</div>

<div role="tabpanel">
    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#" aria-controls="orderdetail" role="tab" data-toggle="tab">OrderDetails</a></li>
    </ul>
    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="orderdetail">
            <div id="toolbar" class="btn-group">
                <button type="button" id="neworderdetailbutton" class="btn btn-default">
                    <i class="glyphicon glyphicon-plus"></i>
                </button>

                <button type="button" class="btn btn-default">
                    <i class="glyphicon glyphicon-trash"></i>
                </button>
            </div>
            <table id="orderdetails-table" data-search="true"
                   data-flat="false"
                   data-toolbar="#toolbar"
                   data-pagination="true"
                   data-show-refresh="true"
                   data-show-toggle="true"
                   data-show-columns="true"
                   data-single-select="true"
                   data-click-to-select="true">
                <thead>
                    <tr>
                        <th data-field="state" data-checkbox="true"></th>
                        <th data-formatter="rowindexFormatter">#No</th>
                        <th data-field="ProductName">ProductName</th>
                        <th data-field="Price">Price</th>
                        <th data-field="Qty">Qty</th>
                        <th data-field="Amount">Amount</th>
                        <th data-field="Id" data-visible="false">Id</th>
                        <th data-field="action" data-formatter="actionFormatter" data-events="actionEvents">Action</th>
                    </tr>
                </thead>
            </table>

        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="orderdetailformModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">OrderDetails</h4>
            </div>
            <div class="modal-body" id="orderdetailformModal-body">
                @*@Html.Partial("_OrderDetailForm")*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" id="orderdetailconfirmbutton" class="btn btn-primary">OK</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    var orderid = -1;
    var details = [];
    var currentrowindex = -1;
    $orderdetailstable = $('#orderdetails-table');
    $remove = $('#remove');
    //console.log($orderdetailstable);
    function rowindexFormatter(value, row, index) {
        return index + 1;
    }
    function actionFormatter(value, row, index) {
        return [
            '<a class="edit" href="javascript:void(0)" title="Add">',
            '<i class="glyphicon glyphicon-edit"></i>',
            '</a>  ',
            ' <a class="remove" href="javascript:void(0)" title="Remove">',
            '<i class="glyphicon glyphicon-remove"></i>',
            '</a>'
        ].join('');
    }
    window.actionEvents = {

        'click .edit': function (e, value, row, index) {
            currentrowindex = index;
            var url = "/Orders/EditOrderDetail"
            $.get(url + '/' + row.Id, function (data) {

                $('#orderdetailformModal-body').html(data);

                if (row.Id > 0) {

                } else {
                    var id = $('#Id');
                    var productid = $('#ProductId');
                    var price = $('#Price');
                    var qty = $('#Qty');
                    var amount = $('#Amount');
                    var rowindex = $('#rowindex');
                    productid.val(row.ProductId);
                    price.val(row.Price);
                    qty.val(row.Qty);
                    id.val(row.Id);
                    amount.val(row.Amount);
                }
                $('#orderdetailformModal').modal('toggle');
            });


            // console.log(value, row, index);
        },
        'click .remove': function (e, value, row, index) {
            if (row.Id > 0) {
                deleteOrderDetail(row.Id);
            } else {
                $('#orderdetails-table').bootstrapTable('remove', {
                    field: '$index',
                    values: [index]
                });
            }
            //console.log(value, row, index);
        }
    };

    function deleteOrderDetail(id) {
        var url = '@Url.Action("DeleteOrderDetail")';
        bootbox.dialog({
            message: "Are you sure delete " + id,
            title: "Delete OrderDetail ",
            buttons: {
                Cancel: {
                    label: "Cancel",
                    className: "btn-default",
                    callback: function () {

                    }
                },
                OK: {
                    label: "OK",
                    className: "btn-success",
                    callback: function () {
                        $.post(url, { id: id }, function (data) {
                            $('#orderdetails-table').bootstrapTable('remove', { field: 'Id', values: [id] });
                            //console.log('remove' + row.Id);
                        });
                    }
                }

            }

        });
    }

    $(function () {
        $orderdetailstable = $('#orderdetails-table').bootstrapTable({
            data: []
        });
        if (ObjectState == "Modified") {
            orderid = $('#Id').val();
            var url = '/Orders/GetOrderDetailsByOrderId/' + orderid;
            $.get(url, function (data) {
                //console.log(data);
                $orderdetailstable.bootstrapTable('load', data)
            })

        }

        $('#neworderdetailbutton').on('click', function (e) {
            if ($("form").valid()) {
                currentrowindex = -1;
                var url = "/Orders/CreateOrderDetail"
                $.get(url, function (data) {
                    //console.log(data);
                    var index = -1;
                    $('#orderdetailformModal-body').html(data);
                    $('#Id').val(0);
                    $('#orderdetailformModal').modal('toggle');
                });
            }

            e.preventDefault();

            //Return false regardless of validation to stop form submitting
            //prior to ajax doing its thing
            return false;
        })
        $('#orderdetailconfirmbutton').on('click', function (e) {
            $("form").removeData("validator");
            $("form").removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse("form");

            if (!$('form').valid()) {
                e.preventDefault();
                return false;
            }


            //var data = $orderdetailstable.bootstrapTable('getData');
            //var orderdetailid = data.length + 1;
            var productid = $('#ProductId :selected');
            var price = $('#Price');
            var qty = $('#Qty');
            var amount = $('#Amount');
            var id = $('#Id');


            var product = { "Id": productid.val(), "Name": productid.text() };
            var orderdetail = {
                "Id": id.val(), "ProductId": product.Id, "ProductName": product.Name, "Price": price.val(), "Qty": qty.val(), "Amount": amount.val()
            }
            //console.log(orderdetail);
            if (currentrowindex == '-1') {
                $orderdetailstable.bootstrapTable('append', orderdetail);
            } else {
                $orderdetailstable.bootstrapTable('updateRow', { index: currentrowindex, row: orderdetail });
            }
            price.val('');
            qty.val('');
            amount.val('');
         
            //$('#Price').val('');

            $('#orderdetailformModal').modal('toggle');
        });



    });

</script>




