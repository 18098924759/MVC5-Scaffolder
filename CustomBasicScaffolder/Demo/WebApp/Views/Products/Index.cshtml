@using Kendo.Mvc.UI
@using Kendo.Mvc.UI.Html


@model IEnumerable<WebApp.Models.Product>




@{
    ViewBag.Title = "Product";
}


<div class="container-fluid">
    <!-- Page Heading -->
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                Product
                <small>Index</small>
            </h1>
            <ol class="breadcrumb">
                <li>
                    <i class="fa fa-home"></i>  @Html.ActionLink("Home", "Index", "Home")
                </li>
                 
                <li class="active">
                    <i class="fa fa-file"></i> Products
                </li>
            </ol>
        </div>
    </div>
    <!-- /.row -->
     <div class="row">
        <div class="col-lg-12">
             
     @(Html.Kendo().Grid<WebApp.Models.Product>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Command(command => {
                command.Edit();
                command.Destroy();
                command.Custom("Detail").Click("showDetail");
            });
					       			   //主键列
			   columns.Bound(col => col.Id);
			   					       			   columns.Bound(col => col.Name);
			   					       			   columns.Bound(col => col.Unit);
			   					       			   columns.Bound(col => col.UnitPrice);
			   					       			   columns.Bound(col => col.StockQty);
			   					       			   //日期类型列
			   columns.Bound(col => col.ConfirmDateTime).Format("{0:yyyy-MM-dd}");
			   					       			   //外键列
			   columns.ForeignKey(col => col.CategoryId, (System.Collections.IEnumerable)ViewBag.Categories, "Id", "Name") ; 
			   			             
        })
       .ToolBar(toolBar =>
                {
                   toolBar.Create();
                   toolBar.Excel();
                })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Filterable()
        .Reorderable(reorder => reorder.Columns(true))
        .Groupable()
        .Pageable()
        .Scrollable()
        .ColumnMenu()
        .Sortable()
        .HtmlAttributes(new { style = "height:540px;" })
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Events(events => events.Error("errorHandler"))
            .Model(model =>
            {
															//主键列
						model.Id(p => p.Id);
						model.Field(p => p.Id).Editable(false);
				   			   											 
				   			   											 
				   			   											 
				   			   											 
				   			   											//日期类型列
						 
			       			   											//外键列
						 
				   			               })
			.Sort(sort =>
			 {
				sort.Add(p => p.Id).Descending();
			 })
            .Read(read => read.Action("GridRead", "Products"))
            .Create(create => create.Action("GridCreate", "Products"))
            .Update(update => update.Action("GridUpdate", "Products"))
            .Destroy(delete => delete.Action("GridDelete", "Products"))
        )
                
    )
       
 
        </div>
    </div>

	 
</div>
@section Scripts {
    <script type="text/javascript">
         function errorHandler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
		function showDetail(e) {
			e.preventDefault();
			//console.log(e.target, this);
			var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
			var id = dataItem.Id;
			//console.log(dataItem.Id);
			window.location.href = "@Url.Action("Edit","Products")" + "/" + id;
		}
        $(document).ready(function (e) {

		});
     </script>
}

