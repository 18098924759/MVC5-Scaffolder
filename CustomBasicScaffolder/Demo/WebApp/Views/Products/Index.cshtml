@using Kendo.Mvc.UI
@using Kendo.Mvc.UI.Html

@model IEnumerable<WebApp.Models.Product>




@{
    ViewBag.Title = "Product";
}


<div class="container-fluid">
    <!-- Page Heading -->
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                Product
                <small>Index</small>
            </h1>
            <ol class="breadcrumb">
                <li>
                    <i class="fa fa-home"></i>  @Html.ActionLink("Home", "Index", "Home")
                </li>

                <li class="active">
                    <i class="fa fa-file"></i> Product
                </li>
            </ol>
        </div>
    </div>
    <!-- /.row -->
    <div class="row">
        <div class="col-lg-12">

    @(Html.Kendo().Grid<WebApp.Models.Product>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Command(command => {
                command.Edit();
                command.Destroy();
                command.Custom("Detail").Click("showDetail");
            });
            //外键列
            columns.Bound(p => p.Id);
            columns.ForeignKey(p => p.CategoryId, (System.Collections.IEnumerable)ViewBag.Categories, "Id", "Name").Title("Category").Width(150);    
            columns.Bound(p => p.Name);
            columns.Bound(p => p.UnitPrice).Width(150);
            columns.Bound(p => p.ConfirmDateTime).Format("{0:MM-dd-yyyy}").Width(150);
        })
       .ToolBar(toolBar =>
                {
                   toolBar.Create();
                   toolBar.Excel();
                })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Filterable()
        .Groupable()
        .Pageable()
        .Scrollable()
        .ColumnMenu()
        .Sortable()
        .HtmlAttributes(new { style = "height:540px;" })
        .DataSource(dataSource => dataSource
            .Ajax()
            .Events(events => events.Error("errorHandler"))
            .Model(model =>
            {
                model.Id(p => p.Id);
                model.Field(p => p.Id).Editable(false);
                //model.Field(p => p.CategoryId).DefaultValue(ViewBag.DefaultCategoryId);
            })
            .Read(read => read.Action("GridRead", "Products"))
            .Create(create => create.Action("GridCreate", "Products"))
            .Update(update => update.Action("GridUpdate", "Products"))
            .Destroy(delete => delete.Action("GridDelete", "Products"))
        )
                
    )
            <br />

        </div>
    </div>
</div>
<style>
.k-widget .templateCell
{
    overflow: visible;
}
</style>
@section Scripts {
    <script type="text/javascript">
    function initMenus(e) {
        $(".templateCell").each(function () {
            eval($(this).children("script").last().html());
        });
    }
    function showDetail(e) {
        e.preventDefault();
        //console.log(e.target, this);
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //console.log(dataItem.Id);
        window.location.href = "@Url.Action("Edit","Products")" + "/" + dataItem.Id;
    }

    //$(window).resize(function () {
    //    var gridElement = $("#Product"),
    //        newHeight = gridElement.innerHeight(),
    //        otherElements = gridElement.children().not(".k-grid-content"),
    //        otherElementsHeight = 0;

    //    otherElements.each(function () {
    //        otherElementsHeight += $(this).outerHeight() - 100;
    //    });
    //    console.log(otherElementsHeight);
    //    gridElement.children(".k-grid-content").height(newHeight - otherElementsHeight);
    //});

    function errorHandler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    $(function () {

    });

    </script>
}

