<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@using Kendo.Mvc.UI
@using Kendo.Mvc.UI.Html
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
    var modelVariable = ModelMetadata.EntitySetName.ToLower();
	
    var primaryKeyName = GetPrimaryKeyName(); 
#>


<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ProgramTitle #>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}


<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<#
    var modelName =  ModelMetadata.EntitySetName;
 #>
<div class="container-fluid">
    <!-- Page Heading -->
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                <#= ProgramTitle #>
                <small><#= ViewName #></small>
            </h1>
            <ol class="breadcrumb">
                <li>
                    <i class="fa fa-home"></i>  @Html.ActionLink("Home", "Index", "Home")
                </li>
                 
                <li class="active">
                    <i class="fa fa-file"></i> <#= modelName #>
                </li>
            </ol>
        </div>
    </div>
    <!-- /.row -->
     <div class="row">
        <div class="col-lg-12">
             
     @(Html.Kendo().Grid<WebApp.Models.Product>()
        .Name("<#= modelName #>")
        .Columns(columns =>
        {
            columns.Command(command => {
                command.Edit();
                command.Destroy();
                command.Custom("Detail").Click("showDetail");
            });
			<# 
			foreach (PropertyMetadata property in ModelMetadata.Properties.Where(n=>n.Scaffold && n.AssociationDirection!=AssociationDirection.ManyToOne && n.AssociationDirection != AssociationDirection.OneToMany) )
            {
			#>
		       <#
                   if(property.IsForeignKey) {
					   var foreignModel = ModelMetadata.RelatedEntities.Where(x=>x.ForeignKeyPropertyNames[0]== property.PropertyName).First();
					   var foreignEntityName = foreignModel.EntitySetName;
					   var foreighModelId = foreignModel.PrimaryKeyNames[0];
					   var foreighModeDisplayName =foreignModel.DisplayPropertyName;
			   #>
			   //外键列
			   columns.ForeignKey(col => col.<#= property.PropertyName  #>, (System.Collections.IEnumerable)ViewBag.<#= foreignEntityName #>, "<#= foreighModelId #>", "Name").Title("<#= foreighModeDisplayName #>"); 
			   <#  } else if (property.ShortTypeName=="DateTime" ) { #>
			   //日期类型列
			   columns.Bound(col => col.<#= property.PropertyName #>).Format("{0:yyyy-MM-dd}");
			   <#  } else if(property.IsPrimaryKey) { #>
			   //主键列
			   columns.Bound(col => col.<#= property.PropertyName #>);
			   <#  } else { #>
			   columns.Bound(col => col.<#= property.PropertyName #>);
			   <# } #>
			<# 
            }
			#>
             
        })
       .ToolBar(toolBar =>
                {
                   toolBar.Create();
                   toolBar.Excel();
                })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Filterable()
        .Groupable()
        .Pageable()
        .Scrollable()
        .ColumnMenu()
        .Sortable()
        .HtmlAttributes(new { style = "height:540px;" })
		<#
		if( GenerateMasterDetailRelationship && OneToManyModelMetadata.Count>0)
        {
		#>
		.ClientDetailTemplateId("detailtemplate")
		<# } #>
        .DataSource(dataSource => dataSource
            .Ajax()
            .Events(events => events.Error("errorHandler"))
			.PageSize(20)
            .Model(model =>
            {
				<# 
					foreach (PropertyMetadata property in ModelMetadata.Properties.Where(n=>n.Scaffold && n.AssociationDirection!=AssociationDirection.ManyToOne && n.AssociationDirection != AssociationDirection.OneToMany) )
					{
				#>
					<#
					   if(property.IsForeignKey) {
					   var foreignModel = ModelMetadata.RelatedEntities.Where(x=>x.ForeignKeyPropertyNames[0]== property.PropertyName).First();
					   var foreignEntityName = foreignModel.EntitySetName;
					   var foreighModelId = foreignModel.PrimaryKeyNames[0];
					   var foreighModeDisplayName =foreignModel.DisplayPropertyName;
			       #>
						//外键列
						model.Field(p => p.<#= property.PropertyName  #>); 
				   <#  } else if (property.ShortTypeName=="DateTime" ){ #>
						//日期类型列
						model.Field(p => p.<#= property.PropertyName  #>) ;
			       <#  } else if(property.IsPrimaryKey) { #>
						//主键列
						model.Id(p => p.<#= property.PropertyName  #>);
						model.Field(p => p.<#= property.PropertyName  #>).Editable(false);
				   <#  } else { #>
						model.Field(p => p.<#= property.PropertyName  #>) ;
				   <# } #>
			   <# 
                }
			   #>
            })
			.Sort(sort =>
			 {
				sort.Add(p => p.<#= primaryKeyName  #>).Descending();
			 })
            .Read(read => read.Action("GridRead", "<#= ControllerRootName #>"))
            .Create(create => create.Action("GridCreate", "<#= ControllerRootName #>"))
            .Update(update => update.Action("GridUpdate", "<#= ControllerRootName #>"))
            .Destroy(delete => delete.Action("GridDelete", "<#= ControllerRootName #>"))
        )
                
    )
       
		

		<#
		if( GenerateMasterDetailRelationship && OneToManyModelMetadata.Count>0)
        {
		#>
		<!--内嵌明细表-->
		<script id="detailtemplate" type="text/kendo-tmpl">
            @(Html.Kendo().TabStrip()
            .Name("tabStrip_#=<#= primaryKeyName #>#")
            .SelectedIndex(0)
            .Animation(animation => animation.Open(open => open.SlideIn(SlideDirection.Left)))
            .Items(items =>
            {
				 <# 
					foreach (PropertyMetadata property in ModelMetadata.Properties) 
					{
						if (property.AssociationDirection == AssociationDirection.OneToMany && OneToManyModelMetadata.ContainsKey(property.PropertyName))
						{
							var childrenmodelmeta=OneToManyModelMetadata[property.PropertyName];
							var detailmodelnameVar=property.PropertyName.ToLower();
							var detailmodelname = property.PropertyName;
							var detailmodeltypename = property.TypeName;
							var relatedEntities = childrenmodelmeta.RelatedEntities;
							var foreignkeyname = relatedEntities.Where(n=>n.ShortTypeName == ModelTypeName).First().ForeignKeyPropertyNames[0];
							var readaction = "Read" + property.PropertyName + "With" + foreignkeyname;
			    #>
				 //tabs
				 items.Add().Text("<#= detailmodelname #>").Content(@<text>
                            @(Html.Kendo().Grid<<#= detailmodeltypename #>>()
                               .Name("<#= detailmodelname #>_#=<#= primaryKeyName #>#")
                               .Columns(columns =>
                               {
							         <# 
										foreach (PropertyMetadata chproperty in childrenmodelmeta.Properties.Where(n=>n.Scaffold && n.AssociationDirection!=AssociationDirection.ManyToOne && n.AssociationDirection != AssociationDirection.OneToMany) )
										{
									#>
										<# if(chproperty.PropertyName ==  foreignkeyname) continue; #>
										<#  if (chproperty.ShortTypeName=="DateTime" ){ #>
											//日期类型列
											columns.Bound(col => col.<#= chproperty.PropertyName #>).Format("{0:yyyy-MM-dd}");
										<#  } else { #>
											columns.Bound(col => col.<#= chproperty.PropertyName #>);
										<# } #>
									<#  } #>
                                     
                                })
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(10)
                                    .Read(read => read.Action("<#= readaction #>", "<#= ControllerRootName #>", new { <#= foreignkeyname.ToLower() #> = "#=<#= primaryKeyName #>#" }))
                                )
                                .Pageable()
                                .Sortable()
                                .ToClientTemplate()
                                )
                            </text>
                    );



				<#
						}
				} 
				#>

            })
            .ToClientTemplate())
            </script>

		<!--内嵌明细表--> 
		<# } #>

        </div>
    </div>

	 
</div>
@section Scripts {
    <script type="text/javascript">
         function errorHandler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
		function showDetail(e) {
			e.preventDefault();
			//console.log(e.target, this);
			var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
			var id = dataItem.<#= primaryKeyName #>;
			//console.log(dataItem.Id);
			window.location.href = "@Url.Action("Edit","<#= ControllerRootName #>")" + "/" + id;
		}
        $(document).ready(function (e) {

		});
     </script>
}

<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>